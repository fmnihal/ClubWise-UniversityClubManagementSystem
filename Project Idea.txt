Our project ClubWise has 3 type of users: visitor/students, club members, admin panel. A visitor can at first enter the homepage that offers: SignUp (including CreateAccount, VerifyID, Login), About Us, Reach Us (Communicating medium); Once signed-in, he can explore other features, such as buying club merchandises (even if he isn't a member of that club, membership brings him an amount of discount). Visitor can explore clubs; in other words, there'll be a page where one can land to explore existing clubs & click on specific ones to know further details, as well as about the events held by the clubs. Visitor can participate event by going through a process called 'enroll', he can also give a feedback on his experience on the event (it can be a star-rating system). A visitor can apply for membership for a specific or several clubs; the approval is given by admin panel, once approved one can be considered a club member. As a club member one can involve in hosting events, magazine works, selling merchandise, ensuring attendance in club meetings, managing his own club profile. Opting for event has several features/steps: view upcoming events, submit event proposal, volunteer, review feedbacks (given by visitors), review event idea; Admin panel will be responsible to approve & launch these ideas & events. Regarding magazine works, one can invite writings; for that one can send notif & boost the promotion post; there can be a system to collect contents from students from within & outside the club, submit & review them; admin panel will approve contents & publish them on the magazine. A member can customize his own profile, customize settings; in order to customize his profile, he may need to verify his id again; admin panel can assign them roles as club members; admin panel has control over rejecting membership application or removing an existing club member. So far this is the overall scenario of ClubWise.

Homepage	[CreateAccount (SignUP, VerifyID, Login), AboutUs, ReachUs]
Explore clubs	[Landing Page, Click on Specific Club (to see Details & Events)]
Membership	[Apply (Visitor), Approve/Reject (Admin)]
Events (Visitor)[Enroll, Give feedback, ExploreUpcomingEvents]
Events (Member)	[ReviewFeedback (collected from visitors), SubmitEventProposal, Volunteer]
Events (Admin)	[Select/Approve Event idea, Launch Events]
Magazine	[ViewArchive (all), SubmitContent (all), ApproveContent (Admin)]
Magazine(Member)[InviteContent, SendNotif, CollectContent, ReviewContent]
Attendance	[GiveAttendance (member), Track (admin)]
Merchandise	[Buy (visitor, member(%)), Sell (member)]
Account (Member)[CustomizeProfile (VerifyID), Settings]
Account (Admin)	[RoleAssign, RemoveMember]

Considering the complexity of the system and the interdependencies between different functionalities, it's essential to start with the core features that provide the foundation for the rest of the system. Authentication, club exploration, event participation, and membership application are good starting points as they form the basis of user interaction with the platform.